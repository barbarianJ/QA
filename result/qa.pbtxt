node {
  name: "input1_ids"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "input1_mask"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "input2_ids"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "input2_mask"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "label_id"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "input1_ids"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "zeros/mul"
  op: "Mul"
  input: "strided_slice"
  input: "zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "zeros/Less"
  op: "Less"
  input: "zeros/mul"
  input: "zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "zeros/packed"
  op: "Pack"
  input: "strided_slice"
  input: "zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/packed"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert/embeddings/ExpandDims"
  op: "ExpandDims"
  input: "input1_ids"
  input: "bert/embeddings/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\210R\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/word_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape"
  op: "Reshape"
  input: "bert/embeddings/ExpandDims"
  input: "bert/embeddings/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/embeddings/GatherV2"
  op: "GatherV2"
  input: "bert/embeddings/word_embeddings/read"
  input: "bert/embeddings/Reshape"
  input: "bert/embeddings/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/mul"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/Assign"
  op: "Assign"
  input: "bert/embeddings/word_embeddings_2"
  input: "bert/embeddings/word_embeddings_2/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings_2/read"
  op: "Identity"
  input: "bert/embeddings/word_embeddings_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
}
node {
  name: "bert/embeddings/MatMul"
  op: "MatMul"
  input: "bert/embeddings/GatherV2"
  input: "bert/embeddings/word_embeddings_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/embeddings/Shape"
  op: "Shape"
  input: "bert/embeddings/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice"
  op: "StridedSlice"
  input: "bert/embeddings/Shape"
  input: "bert/embeddings/strided_slice/stack"
  input: "bert/embeddings/strided_slice/stack_1"
  input: "bert/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1/shape"
  op: "Pack"
  input: "bert/embeddings/strided_slice"
  input: "bert/embeddings/Reshape_1/shape/1"
  input: "bert/embeddings/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1"
  op: "Reshape"
  input: "bert/embeddings/MatMul"
  input: "bert/embeddings/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/Shape_1"
  op: "Shape"
  input: "bert/embeddings/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/embeddings/strided_slice_1"
  op: "StridedSlice"
  input: "bert/embeddings/Shape_1"
  input: "bert/embeddings/strided_slice_1/stack"
  input: "bert/embeddings/strided_slice_1/stack_1"
  input: "bert/embeddings/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/token_type_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_2"
  op: "Reshape"
  input: "zeros"
  input: "bert/embeddings/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/one_hot/on_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/embeddings/one_hot/off_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/one_hot/depth"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/embeddings/one_hot"
  op: "OneHot"
  input: "bert/embeddings/Reshape_2"
  input: "bert/embeddings/one_hot/depth"
  input: "bert/embeddings/one_hot/on_value"
  input: "bert/embeddings/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bert/embeddings/MatMul_1"
  op: "MatMul"
  input: "bert/embeddings/one_hot"
  input: "bert/embeddings/token_type_embeddings/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/embeddings/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_3/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_3/shape"
  op: "Pack"
  input: "bert/embeddings/strided_slice_1"
  input: "bert/embeddings/Reshape_3/shape/1"
  input: "bert/embeddings/Reshape_3/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/Reshape_3"
  op: "Reshape"
  input: "bert/embeddings/MatMul_1"
  input: "bert/embeddings/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/add"
  op: "Add"
  input: "bert/embeddings/Reshape_1"
  input: "bert/embeddings/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "bert/embeddings/assert_less_equal/x"
  input: "bert/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/All"
  op: "All"
  input: "bert/embeddings/assert_less_equal/LessEqual"
  input: "bert/embeddings/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (bert/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (bert/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "bert/embeddings/assert_less_equal/All"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
  input: "bert/embeddings/assert_less_equal/x"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
  input: "bert/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/position_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice/begin"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice/size"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice"
  op: "Slice"
  input: "bert/embeddings/position_embeddings/read"
  input: "bert/embeddings/Slice/begin"
  input: "bert/embeddings/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/Reshape_4/shape"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_4"
  op: "Reshape"
  input: "bert/embeddings/Slice"
  input: "bert/embeddings/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/add_1"
  op: "Add"
  input: "bert/embeddings/add"
  input: "bert/embeddings/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/embeddings/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/embeddings/LayerNorm/moments/SquaredDifference"
  input: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/embeddings/LayerNorm/moments/variance"
  input: "bert/embeddings/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/embeddings/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  input: "bert/embeddings/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/moments/mean"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/embeddings/LayerNorm/beta/read"
  input: "bert/embeddings/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/embeddings/LayerNorm/batchnorm/mul_1"
  input: "bert/embeddings/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/Shape"
  op: "Shape"
  input: "input1_ids"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/Shape"
  input: "bert/encoder/strided_slice/stack"
  input: "bert/encoder/strided_slice/stack_1"
  input: "bert/encoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Shape_1"
  op: "Shape"
  input: "input1_mask"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/Shape_1"
  input: "bert/encoder/strided_slice_1/stack"
  input: "bert/encoder/strided_slice_1/stack_1"
  input: "bert/encoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice"
  input: "bert/encoder/Reshape/shape/1"
  input: "bert/encoder/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape"
  op: "Reshape"
  input: "input1_mask"
  input: "bert/encoder/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Cast"
  op: "Cast"
  input: "bert/encoder/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/ones/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/ones/mul"
  op: "Mul"
  input: "bert/encoder/strided_slice"
  input: "bert/encoder/ones/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/ones/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/ones/mul_1"
  op: "Mul"
  input: "bert/encoder/ones/mul"
  input: "bert/encoder/ones/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bert/encoder/ones/Less"
  op: "Less"
  input: "bert/encoder/ones/mul_1"
  input: "bert/encoder/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/ones/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/ones/packed/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/ones/packed"
  op: "Pack"
  input: "bert/encoder/strided_slice"
  input: "bert/encoder/ones/packed/1"
  input: "bert/encoder/ones/packed/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/ones"
  op: "Fill"
  input: "bert/encoder/ones/packed"
  input: "bert/encoder/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/mul"
  op: "Mul"
  input: "bert/encoder/ones"
  input: "bert/encoder/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/Shape_2"
  op: "Shape"
  input: "bert/embeddings/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_2"
  op: "StridedSlice"
  input: "bert/encoder/Shape_2"
  input: "bert/encoder/strided_slice_2/stack"
  input: "bert/encoder/strided_slice_2/stack_1"
  input: "bert/encoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_1"
  op: "Reshape"
  input: "bert/embeddings/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared/attention/self/Shape"
  input: "bert/encoder/layer_shared/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared/attention/self/Shape_1"
  input: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/query/kernel"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/query/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/query/bias"
  input: "bert/encoder/layer_shared/attention/self/query/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/query/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/key/kernel"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/key/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/key/bias"
  input: "bert/encoder/layer_shared/attention/self/key/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/key/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/value/kernel"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/value/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/value/bias"
  input: "bert/encoder/layer_shared/attention/self/value/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/self/value/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared/attention/self/Reshape"
  input: "bert/encoder/layer_shared/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared/attention/self/transpose"
  input: "bert/encoder/layer_shared/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/self/MatMul"
  input: "bert/encoder/layer_shared/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/self/sub/x"
  input: "bert/encoder/layer_shared/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/self/sub"
  input: "bert/encoder/layer_shared/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/self/Mul"
  input: "bert/encoder/layer_shared/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared/attention/self/Softmax"
  input: "bert/encoder/layer_shared/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared/attention/self/mul_2"
  input: "bert/encoder/layer_shared/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared/attention/self/transpose_3"
  input: "bert/encoder/layer_shared/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/dense/bias"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/output/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/output/dense/BiasAdd"
  input: "bert/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared/attention/output/add"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared/attention/output/add"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/output/add"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/intermediate/dense/bias"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/intermediate/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/dense/kernel"
  input: "bert/encoder/layer_shared/output/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/output/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/dense/bias"
  input: "bert/encoder/layer_shared/output/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/output/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/bias"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/beta/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  op: "Identity"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared/output/add"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared/output/add"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared/output/add"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_1/attention/self/Shape"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_1/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_1/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_1/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape"
  input: "bert/encoder/layer_shared_1/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_1/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_1/attention/self/transpose"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/attention/self/MatMul"
  input: "bert/encoder/layer_shared_1/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_1/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_1/attention/self/sub/x"
  input: "bert/encoder/layer_shared_1/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/attention/self/sub"
  input: "bert/encoder/layer_shared_1/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/attention/self/Mul"
  input: "bert/encoder/layer_shared_1/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_1/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_1/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_1/attention/self/Softmax"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_1/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_1/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_1/attention/self/mul_2"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_1/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_1/attention/output/add"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_1/attention/output/add"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/attention/output/add"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_1/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_1/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_1/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_1/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_1/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_1/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_1/output/add"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_1/output/add"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/output/add"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_2/attention/self/Shape"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_2/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_2/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_2/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape"
  input: "bert/encoder/layer_shared_2/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_2/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_2/attention/self/transpose"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/attention/self/MatMul"
  input: "bert/encoder/layer_shared_2/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_2/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_2/attention/self/sub/x"
  input: "bert/encoder/layer_shared_2/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/attention/self/sub"
  input: "bert/encoder/layer_shared_2/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/attention/self/Mul"
  input: "bert/encoder/layer_shared_2/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_2/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_2/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_2/attention/self/Softmax"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_2/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_2/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_2/attention/self/mul_2"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_2/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_2/attention/output/add"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_2/attention/output/add"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/attention/output/add"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_2/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_2/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_2/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_2/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_2/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_2/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_2/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_2/output/add"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_2/output/add"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/output/add"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_3/attention/self/Shape"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_3/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_3/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_3/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape"
  input: "bert/encoder/layer_shared_3/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_3/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_3/attention/self/transpose"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/attention/self/MatMul"
  input: "bert/encoder/layer_shared_3/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_3/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_3/attention/self/sub/x"
  input: "bert/encoder/layer_shared_3/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/attention/self/sub"
  input: "bert/encoder/layer_shared_3/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/attention/self/Mul"
  input: "bert/encoder/layer_shared_3/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_3/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_3/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_3/attention/self/Softmax"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_3/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_3/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_3/attention/self/mul_2"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_3/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_3/attention/output/add"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_3/attention/output/add"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/attention/output/add"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_3/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_3/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_3/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_3/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_3/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_3/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_3/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_3/output/add"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_3/output/add"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/output/add"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_4/attention/self/Shape"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_4/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_4/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_4/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape"
  input: "bert/encoder/layer_shared_4/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_4/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_4/attention/self/transpose"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/attention/self/MatMul"
  input: "bert/encoder/layer_shared_4/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_4/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_4/attention/self/sub/x"
  input: "bert/encoder/layer_shared_4/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/attention/self/sub"
  input: "bert/encoder/layer_shared_4/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/attention/self/Mul"
  input: "bert/encoder/layer_shared_4/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_4/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_4/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_4/attention/self/Softmax"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_4/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_4/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_4/attention/self/mul_2"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_4/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_4/attention/output/add"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_4/attention/output/add"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/attention/output/add"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_4/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_4/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_4/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_4/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_4/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_4/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_4/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_4/output/add"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_4/output/add"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/output/add"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_5/attention/self/Shape"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_5/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_5/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_5/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape"
  input: "bert/encoder/layer_shared_5/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_5/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_5/attention/self/transpose"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/attention/self/MatMul"
  input: "bert/encoder/layer_shared_5/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_5/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_5/attention/self/sub/x"
  input: "bert/encoder/layer_shared_5/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/attention/self/sub"
  input: "bert/encoder/layer_shared_5/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/attention/self/Mul"
  input: "bert/encoder/layer_shared_5/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_5/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_5/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_5/attention/self/Softmax"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_5/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_5/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_5/attention/self/mul_2"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_5/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_5/attention/output/add"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_5/attention/output/add"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/attention/output/add"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_5/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_5/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_5/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_5/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_5/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_5/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_5/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_5/output/add"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_5/output/add"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/output/add"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_6/attention/self/Shape"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_6/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_6/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_6/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape"
  input: "bert/encoder/layer_shared_6/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_6/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_6/attention/self/transpose"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/attention/self/MatMul"
  input: "bert/encoder/layer_shared_6/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_6/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_6/attention/self/sub/x"
  input: "bert/encoder/layer_shared_6/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/attention/self/sub"
  input: "bert/encoder/layer_shared_6/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/attention/self/Mul"
  input: "bert/encoder/layer_shared_6/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_6/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_6/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_6/attention/self/Softmax"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_6/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_6/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_6/attention/self/mul_2"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_6/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_6/attention/output/add"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_6/attention/output/add"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/attention/output/add"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_6/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_6/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_6/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_6/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_6/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_6/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_6/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_6/output/add"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_6/output/add"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/output/add"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_7/attention/self/Shape"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_7/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_7/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_7/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape"
  input: "bert/encoder/layer_shared_7/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_7/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_7/attention/self/transpose"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/attention/self/MatMul"
  input: "bert/encoder/layer_shared_7/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_7/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_7/attention/self/sub/x"
  input: "bert/encoder/layer_shared_7/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/attention/self/sub"
  input: "bert/encoder/layer_shared_7/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/attention/self/Mul"
  input: "bert/encoder/layer_shared_7/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_7/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_7/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_7/attention/self/Softmax"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_7/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_7/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_7/attention/self/mul_2"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_7/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_7/attention/output/add"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_7/attention/output/add"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/attention/output/add"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_7/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_7/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_7/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_7/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_7/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_7/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_7/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_7/output/add"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_7/output/add"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/output/add"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_8/attention/self/Shape"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_8/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_8/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_8/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape"
  input: "bert/encoder/layer_shared_8/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_8/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_8/attention/self/transpose"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/attention/self/MatMul"
  input: "bert/encoder/layer_shared_8/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_8/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_8/attention/self/sub/x"
  input: "bert/encoder/layer_shared_8/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/attention/self/sub"
  input: "bert/encoder/layer_shared_8/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/attention/self/Mul"
  input: "bert/encoder/layer_shared_8/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_8/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_8/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_8/attention/self/Softmax"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_8/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_8/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_8/attention/self/mul_2"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_8/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_8/attention/output/add"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_8/attention/output/add"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/attention/output/add"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_8/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_8/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_8/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_8/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_8/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_8/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_8/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_8/output/add"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_8/output/add"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/output/add"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_9/attention/self/Shape"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_9/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_9/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_9/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape"
  input: "bert/encoder/layer_shared_9/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_9/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_9/attention/self/transpose"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/attention/self/MatMul"
  input: "bert/encoder/layer_shared_9/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_9/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_9/attention/self/sub/x"
  input: "bert/encoder/layer_shared_9/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/attention/self/sub"
  input: "bert/encoder/layer_shared_9/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/attention/self/Mul"
  input: "bert/encoder/layer_shared_9/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_9/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_9/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_9/attention/self/Softmax"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_9/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_9/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_9/attention/self/mul_2"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_9/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_9/attention/output/add"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_9/attention/output/add"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/attention/output/add"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_9/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_9/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_9/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_9/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_9/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_9/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_9/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_9/output/add"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_9/output/add"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/output/add"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_10/attention/self/Shape"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_10/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_10/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_10/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape"
  input: "bert/encoder/layer_shared_10/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_10/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_10/attention/self/transpose"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/attention/self/MatMul"
  input: "bert/encoder/layer_shared_10/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_10/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_10/attention/self/sub/x"
  input: "bert/encoder/layer_shared_10/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/attention/self/sub"
  input: "bert/encoder/layer_shared_10/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/attention/self/Mul"
  input: "bert/encoder/layer_shared_10/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_10/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_10/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_10/attention/self/Softmax"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_10/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_10/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_10/attention/self/mul_2"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_10/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_10/attention/output/add"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_10/attention/output/add"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/attention/output/add"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_10/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_10/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_10/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_10/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_10/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_10/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_10/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_10/output/add"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_10/output/add"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/output/add"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Shape"
  op: "Shape"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_11/attention/self/Shape"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack_1"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Shape_1"
  op: "Shape"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert/encoder/layer_shared_11/attention/self/Shape_1"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack_1"
  input: "bert/encoder/layer_shared_11/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/1"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape"
  op: "Reshape"
  input: "bert/encoder/layer_shared_11/attention/self/query/BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose"
  op: "Transpose"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape"
  input: "bert/encoder/layer_shared_11/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/1"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/layer_shared_11/attention/self/key/BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_1"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_11/attention/self/transpose"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/attention/self/MatMul"
  input: "bert/encoder/layer_shared_11/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert/encoder/mul"
  input: "bert/encoder/layer_shared_11/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared_11/attention/self/sub/x"
  input: "bert/encoder/layer_shared_11/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/attention/self/sub"
  input: "bert/encoder/layer_shared_11/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/attention/self/Mul"
  input: "bert/encoder/layer_shared_11/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Softmax"
  op: "Softmax"
  input: "bert/encoder/layer_shared_11/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/1"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared_11/attention/self/value/BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_2"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert/encoder/layer_shared_11/attention/self/Softmax"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/layer_shared_11/attention/self/MatMul_1"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/mul_2"
  op: "Mul"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/layer_shared_11/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/layer_shared_11/attention/self/mul_2"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_11/attention/self/transpose_3"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_11/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/attention/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_11/attention/output/add"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_11/attention/output/add"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/attention/output/add"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/Pow"
  op: "Pow"
  input: "bert/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_11/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul/x"
  input: "bert/encoder/layer_shared_11/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul_1/x"
  input: "bert/encoder/layer_shared_11/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_11/intermediate/dense/add_1/x"
  input: "bert/encoder/layer_shared_11/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul_2/x"
  input: "bert/encoder/layer_shared_11/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/dense/MatMul"
  op: "MatMul"
  input: "bert/encoder/layer_shared_11/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/encoder/layer_shared_11/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/output/dense/BiasAdd"
  input: "bert/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/layer_shared_11/output/add"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/layer_shared_11/output/add"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/variance"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/output/add"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert/encoder/Shape_3"
  op: "Shape"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_3"
  op: "StridedSlice"
  input: "bert/encoder/Shape_3"
  input: "bert/encoder/strided_slice_3/stack"
  input: "bert/encoder/strided_slice_3/stack_1"
  input: "bert/encoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_2/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_2/shape/1"
  input: "bert/encoder/Reshape_2/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_4"
  op: "Shape"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_4"
  op: "StridedSlice"
  input: "bert/encoder/Shape_4"
  input: "bert/encoder/strided_slice_4/stack"
  input: "bert/encoder/strided_slice_4/stack_1"
  input: "bert/encoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_3/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_3/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_3/shape/1"
  input: "bert/encoder/Reshape_3/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_3"
  op: "Reshape"
  input: "bert/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_5"
  op: "Shape"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_5"
  op: "StridedSlice"
  input: "bert/encoder/Shape_5"
  input: "bert/encoder/strided_slice_5/stack"
  input: "bert/encoder/strided_slice_5/stack_1"
  input: "bert/encoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_4/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_4/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_4/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_4/shape/1"
  input: "bert/encoder/Reshape_4/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_4"
  op: "Reshape"
  input: "bert/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_6"
  op: "Shape"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_6"
  op: "StridedSlice"
  input: "bert/encoder/Shape_6"
  input: "bert/encoder/strided_slice_6/stack"
  input: "bert/encoder/strided_slice_6/stack_1"
  input: "bert/encoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_5/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_5/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_5/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_5/shape/1"
  input: "bert/encoder/Reshape_5/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_5"
  op: "Reshape"
  input: "bert/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_7"
  op: "Shape"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_7"
  op: "StridedSlice"
  input: "bert/encoder/Shape_7"
  input: "bert/encoder/strided_slice_7/stack"
  input: "bert/encoder/strided_slice_7/stack_1"
  input: "bert/encoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_6/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_6/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_6/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_6/shape/1"
  input: "bert/encoder/Reshape_6/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_6"
  op: "Reshape"
  input: "bert/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_8"
  op: "Shape"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_8"
  op: "StridedSlice"
  input: "bert/encoder/Shape_8"
  input: "bert/encoder/strided_slice_8/stack"
  input: "bert/encoder/strided_slice_8/stack_1"
  input: "bert/encoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_7/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_7/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_7/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_7/shape/1"
  input: "bert/encoder/Reshape_7/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_7"
  op: "Reshape"
  input: "bert/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_9"
  op: "Shape"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_9"
  op: "StridedSlice"
  input: "bert/encoder/Shape_9"
  input: "bert/encoder/strided_slice_9/stack"
  input: "bert/encoder/strided_slice_9/stack_1"
  input: "bert/encoder/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_8/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_8/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_8/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_8/shape/1"
  input: "bert/encoder/Reshape_8/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_8"
  op: "Reshape"
  input: "bert/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_10"
  op: "Shape"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_10"
  op: "StridedSlice"
  input: "bert/encoder/Shape_10"
  input: "bert/encoder/strided_slice_10/stack"
  input: "bert/encoder/strided_slice_10/stack_1"
  input: "bert/encoder/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_9/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_9/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_9/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_9/shape/1"
  input: "bert/encoder/Reshape_9/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_9"
  op: "Reshape"
  input: "bert/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_11"
  op: "Shape"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_11"
  op: "StridedSlice"
  input: "bert/encoder/Shape_11"
  input: "bert/encoder/strided_slice_11/stack"
  input: "bert/encoder/strided_slice_11/stack_1"
  input: "bert/encoder/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_10/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_10/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_10/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_10/shape/1"
  input: "bert/encoder/Reshape_10/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_10"
  op: "Reshape"
  input: "bert/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_12"
  op: "Shape"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_12"
  op: "StridedSlice"
  input: "bert/encoder/Shape_12"
  input: "bert/encoder/strided_slice_12/stack"
  input: "bert/encoder/strided_slice_12/stack_1"
  input: "bert/encoder/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_11/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_11/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_11/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_11/shape/1"
  input: "bert/encoder/Reshape_11/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_11"
  op: "Reshape"
  input: "bert/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_13"
  op: "Shape"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_13"
  op: "StridedSlice"
  input: "bert/encoder/Shape_13"
  input: "bert/encoder/strided_slice_13/stack"
  input: "bert/encoder/strided_slice_13/stack_1"
  input: "bert/encoder/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_12/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_12/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_12/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_12/shape/1"
  input: "bert/encoder/Reshape_12/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_12"
  op: "Reshape"
  input: "bert/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/Shape_14"
  op: "Shape"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert/encoder/strided_slice_14"
  op: "StridedSlice"
  input: "bert/encoder/Shape_14"
  input: "bert/encoder/strided_slice_14/stack"
  input: "bert/encoder/strided_slice_14/stack_1"
  input: "bert/encoder/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert/encoder/Reshape_13/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_13/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert/encoder/Reshape_13/shape"
  op: "Pack"
  input: "bert/encoder/strided_slice_2"
  input: "bert/encoder/Reshape_13/shape/1"
  input: "bert/encoder/Reshape_13/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/Reshape_13"
  op: "Reshape"
  input: "bert/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/Reshape_13"
  input: "bert/pooler/strided_slice/stack"
  input: "bert/pooler/strided_slice/stack_1"
  input: "bert/pooler/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/pooler/Squeeze"
  op: "Squeeze"
  input: "bert/pooler/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Assign"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/read"
  op: "Identity"
  input: "bert/pooler/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/bias/Assign"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "bert/pooler/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/bias/read"
  op: "Identity"
  input: "bert/pooler/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/MatMul"
  op: "MatMul"
  input: "bert/pooler/Squeeze"
  input: "bert/pooler/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/pooler/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/pooler/dense/MatMul"
  input: "bert/pooler/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/pooler/dense/Tanh"
  op: "Tanh"
  input: "bert/pooler/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "input2_ids"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "zeros_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "zeros_1/mul"
  op: "Mul"
  input: "strided_slice_1"
  input: "zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros_1/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "zeros_1/Less"
  op: "Less"
  input: "zeros_1/mul"
  input: "zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros_1/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "zeros_1/packed"
  op: "Pack"
  input: "strided_slice_1"
  input: "zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Fill"
  input: "zeros_1/packed"
  input: "zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/ExpandDims"
  op: "ExpandDims"
  input: "input2_ids"
  input: "bert_1/embeddings/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape"
  op: "Reshape"
  input: "bert_1/embeddings/ExpandDims"
  input: "bert_1/embeddings/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/embeddings/GatherV2"
  op: "GatherV2"
  input: "bert/embeddings/word_embeddings/read"
  input: "bert_1/embeddings/Reshape"
  input: "bert_1/embeddings/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/MatMul"
  op: "MatMul"
  input: "bert_1/embeddings/GatherV2"
  input: "bert/embeddings/word_embeddings_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/embeddings/Shape"
  op: "Shape"
  input: "bert_1/embeddings/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice"
  op: "StridedSlice"
  input: "bert_1/embeddings/Shape"
  input: "bert_1/embeddings/strided_slice/stack"
  input: "bert_1/embeddings/strided_slice/stack_1"
  input: "bert_1/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/embeddings/strided_slice"
  input: "bert_1/embeddings/Reshape_1/shape/1"
  input: "bert_1/embeddings/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_1"
  op: "Reshape"
  input: "bert_1/embeddings/MatMul"
  input: "bert_1/embeddings/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/Shape_1"
  op: "Shape"
  input: "bert_1/embeddings/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/embeddings/Shape_1"
  input: "bert_1/embeddings/strided_slice_1/stack"
  input: "bert_1/embeddings/strided_slice_1/stack_1"
  input: "bert_1/embeddings/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_2"
  op: "Reshape"
  input: "zeros_1"
  input: "bert_1/embeddings/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/one_hot/on_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/embeddings/one_hot/off_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert_1/embeddings/one_hot/depth"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert_1/embeddings/one_hot"
  op: "OneHot"
  input: "bert_1/embeddings/Reshape_2"
  input: "bert_1/embeddings/one_hot/depth"
  input: "bert_1/embeddings/one_hot/on_value"
  input: "bert_1/embeddings/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bert_1/embeddings/MatMul_1"
  op: "MatMul"
  input: "bert_1/embeddings/one_hot"
  input: "bert/embeddings/token_type_embeddings/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_3/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/embeddings/strided_slice_1"
  input: "bert_1/embeddings/Reshape_3/shape/1"
  input: "bert_1/embeddings/Reshape_3/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_3"
  op: "Reshape"
  input: "bert_1/embeddings/MatMul_1"
  input: "bert_1/embeddings/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/add"
  op: "Add"
  input: "bert_1/embeddings/Reshape_1"
  input: "bert_1/embeddings/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "bert_1/embeddings/assert_less_equal/x"
  input: "bert_1/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/All"
  op: "All"
  input: "bert_1/embeddings/assert_less_equal/LessEqual"
  input: "bert_1/embeddings/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (bert_1/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert_1/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (bert_1/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert_1/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert_1/embeddings/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "bert_1/embeddings/assert_less_equal/All"
  input: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_0"
  input: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_1"
  input: "bert_1/embeddings/assert_less_equal/x"
  input: "bert_1/embeddings/assert_less_equal/Assert/Assert/data_3"
  input: "bert_1/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "bert_1/embeddings/Slice/begin"
  op: "Const"
  input: "^bert_1/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Slice/size"
  op: "Const"
  input: "^bert_1/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Slice"
  op: "Slice"
  input: "bert/embeddings/position_embeddings/read"
  input: "bert_1/embeddings/Slice/begin"
  input: "bert_1/embeddings/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_4/shape"
  op: "Const"
  input: "^bert_1/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert_1/embeddings/Reshape_4"
  op: "Reshape"
  input: "bert_1/embeddings/Slice"
  input: "bert_1/embeddings/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/embeddings/add_1"
  op: "Add"
  input: "bert_1/embeddings/add"
  input: "bert_1/embeddings/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/embeddings/add_1"
  input: "bert_1/embeddings/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/embeddings/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/embeddings/add_1"
  input: "bert_1/embeddings/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/embeddings/LayerNorm/moments/SquaredDifference"
  input: "bert_1/embeddings/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/embeddings/LayerNorm/moments/variance"
  input: "bert_1/embeddings/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/embeddings/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/embeddings/LayerNorm/batchnorm/Rsqrt"
  input: "bert/embeddings/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/embeddings/add_1"
  input: "bert_1/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/embeddings/LayerNorm/moments/mean"
  input: "bert_1/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/embeddings/LayerNorm/beta/read"
  input: "bert_1/embeddings/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/embeddings/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/embeddings/LayerNorm/batchnorm/mul_1"
  input: "bert_1/embeddings/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/Shape"
  op: "Shape"
  input: "input2_ids"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape"
  input: "bert_1/encoder/strided_slice/stack"
  input: "bert_1/encoder/strided_slice/stack_1"
  input: "bert_1/encoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Shape_1"
  op: "Shape"
  input: "input2_mask"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_1"
  input: "bert_1/encoder/strided_slice_1/stack"
  input: "bert_1/encoder/strided_slice_1/stack_1"
  input: "bert_1/encoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice"
  input: "bert_1/encoder/Reshape/shape/1"
  input: "bert_1/encoder/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape"
  op: "Reshape"
  input: "input2_mask"
  input: "bert_1/encoder/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Cast"
  op: "Cast"
  input: "bert_1/encoder/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/ones/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones/mul"
  op: "Mul"
  input: "bert_1/encoder/strided_slice"
  input: "bert_1/encoder/ones/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/ones/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones/mul_1"
  op: "Mul"
  input: "bert_1/encoder/ones/mul"
  input: "bert_1/encoder/ones/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones/Less"
  op: "Less"
  input: "bert_1/encoder/ones/mul_1"
  input: "bert_1/encoder/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/ones/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones/packed/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones/packed"
  op: "Pack"
  input: "bert_1/encoder/strided_slice"
  input: "bert_1/encoder/ones/packed/1"
  input: "bert_1/encoder/ones/packed/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/ones"
  op: "Fill"
  input: "bert_1/encoder/ones/packed"
  input: "bert_1/encoder/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/mul"
  op: "Mul"
  input: "bert_1/encoder/ones"
  input: "bert_1/encoder/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/Shape_2"
  op: "Shape"
  input: "bert_1/embeddings/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_2"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_2"
  input: "bert_1/encoder/strided_slice_2/stack"
  input: "bert_1/encoder/strided_slice_2/stack_1"
  input: "bert_1/encoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_1"
  op: "Reshape"
  input: "bert_1/embeddings/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared/attention/self/Shape"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/Reshape_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared/attention/self/transpose"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/attention/self/sub"
  input: "bert_1/encoder/layer_shared/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/attention/self/Mul"
  input: "bert_1/encoder/layer_shared/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared/attention/output/add"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared/attention/output/add"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/attention/output/add"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared/output/add"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared/output/add"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/output/add"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_1/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_1/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_1/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_1/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_1/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_1/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_1/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_1/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_1/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/attention/self/sub"
  input: "bert_1/encoder/layer_shared_1/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_1/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_1/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_1/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_1/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_1/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_1/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_1/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_1/attention/output/add"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_1/attention/output/add"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/attention/output/add"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_1/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_1/output/add"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_1/output/add"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/output/add"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_2/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_2/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_2/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_2/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_2/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_2/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_2/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_2/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_2/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/attention/self/sub"
  input: "bert_1/encoder/layer_shared_2/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_2/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_2/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_2/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_2/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_2/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_2/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_2/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_2/attention/output/add"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_2/attention/output/add"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/attention/output/add"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_2/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_2/output/add"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_2/output/add"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/output/add"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_3/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_3/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_3/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_3/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_3/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_3/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_3/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_3/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_3/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/attention/self/sub"
  input: "bert_1/encoder/layer_shared_3/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_3/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_3/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_3/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_3/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_3/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_3/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_3/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_3/attention/output/add"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_3/attention/output/add"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/attention/output/add"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_3/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_3/output/add"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_3/output/add"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/output/add"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_4/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_4/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_4/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_4/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_4/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_4/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_4/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_4/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_4/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/attention/self/sub"
  input: "bert_1/encoder/layer_shared_4/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_4/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_4/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_4/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_4/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_4/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_4/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_4/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_4/attention/output/add"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_4/attention/output/add"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/attention/output/add"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_4/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_4/output/add"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_4/output/add"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/output/add"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_5/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_5/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_5/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_5/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_5/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_5/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_5/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_5/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_5/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/attention/self/sub"
  input: "bert_1/encoder/layer_shared_5/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_5/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_5/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_5/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_5/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_5/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_5/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_5/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_5/attention/output/add"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_5/attention/output/add"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/attention/output/add"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_5/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_5/output/add"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_5/output/add"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/output/add"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_6/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_6/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_6/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_6/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_6/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_6/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_6/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_6/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_6/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/attention/self/sub"
  input: "bert_1/encoder/layer_shared_6/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_6/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_6/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_6/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_6/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_6/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_6/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_6/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_6/attention/output/add"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_6/attention/output/add"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/attention/output/add"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_6/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_6/output/add"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_6/output/add"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/output/add"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_7/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_7/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_7/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_7/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_7/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_7/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_7/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_7/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_7/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/attention/self/sub"
  input: "bert_1/encoder/layer_shared_7/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_7/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_7/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_7/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_7/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_7/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_7/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_7/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_7/attention/output/add"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_7/attention/output/add"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/attention/output/add"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_7/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_7/output/add"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_7/output/add"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/output/add"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_8/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_8/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_8/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_8/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_8/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_8/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_8/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_8/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_8/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/attention/self/sub"
  input: "bert_1/encoder/layer_shared_8/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_8/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_8/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_8/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_8/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_8/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_8/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_8/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_8/attention/output/add"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_8/attention/output/add"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/attention/output/add"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_8/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_8/output/add"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_8/output/add"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/output/add"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_9/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_9/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_9/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_9/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_9/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_9/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_9/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_9/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_9/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/attention/self/sub"
  input: "bert_1/encoder/layer_shared_9/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_9/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_9/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_9/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_9/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_9/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_9/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_9/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_9/attention/output/add"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_9/attention/output/add"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/attention/output/add"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_9/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_9/output/add"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_9/output/add"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/output/add"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_10/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_10/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_10/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_10/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_10/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_10/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_10/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_10/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_10/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/attention/self/sub"
  input: "bert_1/encoder/layer_shared_10/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_10/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_10/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_10/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_10/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_10/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_10/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_10/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_10/attention/output/add"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_10/attention/output/add"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/attention/output/add"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_10/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_10/output/add"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_10/output/add"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/output/add"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Shape"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_11/attention/self/Shape"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack_1"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Shape_1"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1"
  op: "StridedSlice"
  input: "bert_1/encoder/layer_shared_11/attention/self/Shape_1"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack_1"
  input: "bert_1/encoder/layer_shared_11/attention/self/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/query/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/query/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/query/MatMul"
  input: "bert/encoder/layer_shared/attention/self/query/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/key/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/key/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/key/MatMul"
  input: "bert/encoder/layer_shared/attention/self/key/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/value/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/attention/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/value/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/value/MatMul"
  input: "bert/encoder/layer_shared/attention/self/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/1"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_11/attention/self/query/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/1"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_11/attention/self/key/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_1"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_1"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/MatMul"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/attention/self/MatMul"
  input: "bert_1/encoder/layer_shared_11/attention/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/ExpandDims"
  op: "ExpandDims"
  input: "bert_1/encoder/mul"
  input: "bert_1/encoder/layer_shared_11/attention/self/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/sub"
  op: "Sub"
  input: "bert_1/encoder/layer_shared_11/attention/self/sub/x"
  input: "bert_1/encoder/layer_shared_11/attention/self/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/attention/self/sub"
  input: "bert_1/encoder/layer_shared_11/attention/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/attention/self/Mul"
  input: "bert_1/encoder/layer_shared_11/attention/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Softmax"
  op: "Softmax"
  input: "bert_1/encoder/layer_shared_11/attention/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/1"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_11/attention/self/value/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_2"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/MatMul_1"
  op: "BatchMatMul"
  input: "bert_1/encoder/layer_shared_11/attention/self/Softmax"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/transpose_3"
  op: "Transpose"
  input: "bert_1/encoder/layer_shared_11/attention/self/MatMul_1"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/mul_2"
  op: "Mul"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/layer_shared_11/attention/self/mul_2"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_11/attention/self/transpose_3"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_11/attention/self/Reshape_3"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/output/dense/MatMul"
  input: "bert/encoder/layer_shared/attention/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/attention/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_11/attention/output/add"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_11/attention/output/add"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/attention/output/add"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/MatMul"
  input: "bert/encoder/layer_shared/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/Pow"
  op: "Pow"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0447149984539
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul/x"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.797884583473
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_1/x"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/Tanh"
  op: "Tanh"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/add_1/x"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_2/x"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_3"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/dense/MatMul"
  op: "MatMul"
  input: "bert_1/encoder/layer_shared_11/intermediate/dense/mul_3"
  input: "bert/encoder/layer_shared/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/encoder/layer_shared_11/output/dense/MatMul"
  input: "bert/encoder/layer_shared/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/output/dense/BiasAdd"
  input: "bert_1/encoder/layer_shared_11/attention/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_11/output/add"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert_1/encoder/layer_shared_11/output/add"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/SquaredDifference"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/variance"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/output/add"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/moments/mean"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta/read"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/mul_1"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bert_1/encoder/Shape_3"
  op: "Shape"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_3"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_3"
  input: "bert_1/encoder/strided_slice_3/stack"
  input: "bert_1/encoder/strided_slice_3/stack_1"
  input: "bert_1/encoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_2/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_2/shape/1"
  input: "bert_1/encoder/Reshape_2/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_2"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_4"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_4"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_4"
  input: "bert_1/encoder/strided_slice_4/stack"
  input: "bert_1/encoder/strided_slice_4/stack_1"
  input: "bert_1/encoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_3/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_3/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_3/shape/1"
  input: "bert_1/encoder/Reshape_3/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_3"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_1/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_5"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_5"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_5"
  input: "bert_1/encoder/strided_slice_5/stack"
  input: "bert_1/encoder/strided_slice_5/stack_1"
  input: "bert_1/encoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_4/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_4/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_4/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_4/shape/1"
  input: "bert_1/encoder/Reshape_4/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_4"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_2/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_6"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_6"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_6"
  input: "bert_1/encoder/strided_slice_6/stack"
  input: "bert_1/encoder/strided_slice_6/stack_1"
  input: "bert_1/encoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_5/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_5/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_5/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_5/shape/1"
  input: "bert_1/encoder/Reshape_5/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_5"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_3/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_7"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_7"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_7"
  input: "bert_1/encoder/strided_slice_7/stack"
  input: "bert_1/encoder/strided_slice_7/stack_1"
  input: "bert_1/encoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_6/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_6/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_6/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_6/shape/1"
  input: "bert_1/encoder/Reshape_6/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_6"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_4/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_8"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_8"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_8"
  input: "bert_1/encoder/strided_slice_8/stack"
  input: "bert_1/encoder/strided_slice_8/stack_1"
  input: "bert_1/encoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_7/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_7/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_7/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_7/shape/1"
  input: "bert_1/encoder/Reshape_7/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_7"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_5/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_9"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_9"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_9"
  input: "bert_1/encoder/strided_slice_9/stack"
  input: "bert_1/encoder/strided_slice_9/stack_1"
  input: "bert_1/encoder/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_8/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_8/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_8/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_8/shape/1"
  input: "bert_1/encoder/Reshape_8/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_8"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_6/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_10"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_10"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_10"
  input: "bert_1/encoder/strided_slice_10/stack"
  input: "bert_1/encoder/strided_slice_10/stack_1"
  input: "bert_1/encoder/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_9/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_9/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_9/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_9/shape/1"
  input: "bert_1/encoder/Reshape_9/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_9"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_7/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_11"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_11"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_11"
  input: "bert_1/encoder/strided_slice_11/stack"
  input: "bert_1/encoder/strided_slice_11/stack_1"
  input: "bert_1/encoder/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_10/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_10/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_10/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_10/shape/1"
  input: "bert_1/encoder/Reshape_10/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_10"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_8/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_12"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_12"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_12"
  input: "bert_1/encoder/strided_slice_12/stack"
  input: "bert_1/encoder/strided_slice_12/stack_1"
  input: "bert_1/encoder/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_11/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_11/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_11/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_11/shape/1"
  input: "bert_1/encoder/Reshape_11/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_11"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_9/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_13"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_13"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_13"
  input: "bert_1/encoder/strided_slice_13/stack"
  input: "bert_1/encoder/strided_slice_13/stack_1"
  input: "bert_1/encoder/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_12/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_12/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_12/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_12/shape/1"
  input: "bert_1/encoder/Reshape_12/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_12"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_10/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/Shape_14"
  op: "Shape"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bert_1/encoder/strided_slice_14"
  op: "StridedSlice"
  input: "bert_1/encoder/Shape_14"
  input: "bert_1/encoder/strided_slice_14/stack"
  input: "bert_1/encoder/strided_slice_14/stack_1"
  input: "bert_1/encoder/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_13/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_13/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_13/shape"
  op: "Pack"
  input: "bert_1/encoder/strided_slice_2"
  input: "bert_1/encoder/Reshape_13/shape/1"
  input: "bert_1/encoder/Reshape_13/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/encoder/Reshape_13"
  op: "Reshape"
  input: "bert_1/encoder/layer_shared_11/output/LayerNorm/batchnorm/add_1"
  input: "bert_1/encoder/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert_1/pooler/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/pooler/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/pooler/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert_1/pooler/strided_slice"
  op: "StridedSlice"
  input: "bert_1/encoder/Reshape_13"
  input: "bert_1/pooler/strided_slice/stack"
  input: "bert_1/pooler/strided_slice/stack_1"
  input: "bert_1/pooler/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "bert_1/pooler/Squeeze"
  op: "Squeeze"
  input: "bert_1/pooler/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "bert_1/pooler/dense/MatMul"
  op: "MatMul"
  input: "bert_1/pooler/Squeeze"
  input: "bert/pooler/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert_1/pooler/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert_1/pooler/dense/MatMul"
  input: "bert/pooler/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert_1/pooler/dense/Tanh"
  op: "Tanh"
  input: "bert_1/pooler/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000Z\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "bert/encoder/Reshape_13"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000Z\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "bert_1/encoder/Reshape_13"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000Z\000\000"
      }
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "output_post_process/output_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "output_post_process/output_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "output_post_process/output_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
}
node {
  name: "output_post_process/output_weights/Initializer/truncated_normal"
  op: "Add"
  input: "output_post_process/output_weights/Initializer/truncated_normal/mul"
  input: "output_post_process/output_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
}
node {
  name: "output_post_process/output_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 23040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_post_process/output_weights/Assign"
  op: "Assign"
  input: "output_post_process/output_weights"
  input: "output_post_process/output_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_post_process/output_weights/read"
  op: "Identity"
  input: "output_post_process/output_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
}
node {
  name: "output_post_process/output_bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_post_process/output_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_post_process/output_bias/Assign"
  op: "Assign"
  input: "output_post_process/output_bias"
  input: "output_post_process/output_bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_post_process/output_bias/read"
  op: "Identity"
  input: "output_post_process/output_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_bias"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "Reshape"
  input: "output_post_process/output_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "BiasAdd"
  op: "BiasAdd"
  input: "MatMul"
  input: "output_post_process/output_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "output_post_process/output_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "BiasAdd_1"
  op: "BiasAdd"
  input: "MatMul_1"
  input: "output_post_process/output_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "norm1/Square"
  op: "Square"
  input: "BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "norm1/Sum"
  op: "Sum"
  input: "norm1/Square"
  input: "norm1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "norm1/Maximum"
  op: "Maximum"
  input: "norm1/Sum"
  input: "norm1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm1/Rsqrt"
  op: "Rsqrt"
  input: "norm1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm1"
  op: "Mul"
  input: "BiasAdd"
  input: "norm1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm2/Square"
  op: "Square"
  input: "BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm2/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "norm2/Sum"
  op: "Sum"
  input: "norm2/Square"
  input: "norm2/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "norm2/Maximum"
  op: "Maximum"
  input: "norm2/Sum"
  input: "norm2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm2/Rsqrt"
  op: "Rsqrt"
  input: "norm2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm2"
  op: "Mul"
  input: "BiasAdd_1"
  input: "norm2/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "norm1"
  input: "norm2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "similarity/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "similarity"
  op: "Sum"
  input: "Mul"
  input: "similarity/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/word_embeddings_2"
        string_val: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
        string_val: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
        string_val: "bert/encoder/layer_shared/attention/output/dense/bias"
        string_val: "bert/encoder/layer_shared/attention/output/dense/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/key/bias"
        string_val: "bert/encoder/layer_shared/attention/self/key/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/query/bias"
        string_val: "bert/encoder/layer_shared/attention/self/query/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/value/bias"
        string_val: "bert/encoder/layer_shared/attention/self/value/kernel"
        string_val: "bert/encoder/layer_shared/intermediate/dense/bias"
        string_val: "bert/encoder/layer_shared/intermediate/dense/kernel"
        string_val: "bert/encoder/layer_shared/output/LayerNorm/beta"
        string_val: "bert/encoder/layer_shared/output/LayerNorm/gamma"
        string_val: "bert/encoder/layer_shared/output/dense/bias"
        string_val: "bert/encoder/layer_shared/output/dense/kernel"
        string_val: "bert/pooler/dense/bias"
        string_val: "bert/pooler/dense/kernel"
        string_val: "output_post_process/output_bias"
        string_val: "output_post_process/output_weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "bert/embeddings/LayerNorm/beta"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "bert/embeddings/position_embeddings"
  input: "bert/embeddings/token_type_embeddings"
  input: "bert/embeddings/word_embeddings"
  input: "bert/embeddings/word_embeddings_2"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
  input: "bert/encoder/layer_shared/attention/output/dense/bias"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel"
  input: "bert/encoder/layer_shared/attention/self/key/bias"
  input: "bert/encoder/layer_shared/attention/self/key/kernel"
  input: "bert/encoder/layer_shared/attention/self/query/bias"
  input: "bert/encoder/layer_shared/attention/self/query/kernel"
  input: "bert/encoder/layer_shared/attention/self/value/bias"
  input: "bert/encoder/layer_shared/attention/self/value/kernel"
  input: "bert/encoder/layer_shared/intermediate/dense/bias"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma"
  input: "bert/encoder/layer_shared/output/dense/bias"
  input: "bert/encoder/layer_shared/output/dense/kernel"
  input: "bert/pooler/dense/bias"
  input: "bert/pooler/dense/kernel"
  input: "output_post_process/output_bias"
  input: "output_post_process/output_weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/word_embeddings_2"
        string_val: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
        string_val: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
        string_val: "bert/encoder/layer_shared/attention/output/dense/bias"
        string_val: "bert/encoder/layer_shared/attention/output/dense/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/key/bias"
        string_val: "bert/encoder/layer_shared/attention/self/key/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/query/bias"
        string_val: "bert/encoder/layer_shared/attention/self/query/kernel"
        string_val: "bert/encoder/layer_shared/attention/self/value/bias"
        string_val: "bert/encoder/layer_shared/attention/self/value/kernel"
        string_val: "bert/encoder/layer_shared/intermediate/dense/bias"
        string_val: "bert/encoder/layer_shared/intermediate/dense/kernel"
        string_val: "bert/encoder/layer_shared/output/LayerNorm/beta"
        string_val: "bert/encoder/layer_shared/output/LayerNorm/gamma"
        string_val: "bert/encoder/layer_shared/output/dense/bias"
        string_val: "bert/encoder/layer_shared/output/dense/kernel"
        string_val: "bert/pooler/dense/bias"
        string_val: "bert/pooler/dense/kernel"
        string_val: "output_post_process/output_bias"
        string_val: "output_post_process/output_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "bert/embeddings/word_embeddings_2"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/beta"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/dense/bias"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/output/dense/kernel"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/output/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/key/bias"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/key/kernel"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/key/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/query/bias"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/query/kernel"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/query/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/value/bias"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "bert/encoder/layer_shared/attention/self/value/kernel"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/attention/self/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "bert/encoder/layer_shared/intermediate/dense/bias"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "bert/encoder/layer_shared/intermediate/dense/kernel"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/LayerNorm/beta"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/LayerNorm/gamma"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/dense/bias"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "bert/encoder/layer_shared/output/dense/kernel"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/layer_shared/output/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "output_post_process/output_bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "output_post_process/output_weights"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_post_process/output_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "init"
  op: "NoOp"
  input: "^bert/embeddings/LayerNorm/beta/Assign"
  input: "^bert/embeddings/LayerNorm/gamma/Assign"
  input: "^bert/embeddings/position_embeddings/Assign"
  input: "^bert/embeddings/token_type_embeddings/Assign"
  input: "^bert/embeddings/word_embeddings/Assign"
  input: "^bert/embeddings/word_embeddings_2/Assign"
  input: "^bert/encoder/layer_shared/attention/output/LayerNorm/beta/Assign"
  input: "^bert/encoder/layer_shared/attention/output/LayerNorm/gamma/Assign"
  input: "^bert/encoder/layer_shared/attention/output/dense/bias/Assign"
  input: "^bert/encoder/layer_shared/attention/output/dense/kernel/Assign"
  input: "^bert/encoder/layer_shared/attention/self/key/bias/Assign"
  input: "^bert/encoder/layer_shared/attention/self/key/kernel/Assign"
  input: "^bert/encoder/layer_shared/attention/self/query/bias/Assign"
  input: "^bert/encoder/layer_shared/attention/self/query/kernel/Assign"
  input: "^bert/encoder/layer_shared/attention/self/value/bias/Assign"
  input: "^bert/encoder/layer_shared/attention/self/value/kernel/Assign"
  input: "^bert/encoder/layer_shared/intermediate/dense/bias/Assign"
  input: "^bert/encoder/layer_shared/intermediate/dense/kernel/Assign"
  input: "^bert/encoder/layer_shared/output/LayerNorm/beta/Assign"
  input: "^bert/encoder/layer_shared/output/LayerNorm/gamma/Assign"
  input: "^bert/encoder/layer_shared/output/dense/bias/Assign"
  input: "^bert/encoder/layer_shared/output/dense/kernel/Assign"
  input: "^bert/pooler/dense/bias/Assign"
  input: "^bert/pooler/dense/kernel/Assign"
  input: "^output_post_process/output_bias/Assign"
  input: "^output_post_process/output_weights/Assign"
}
versions {
  producer: 27
}
